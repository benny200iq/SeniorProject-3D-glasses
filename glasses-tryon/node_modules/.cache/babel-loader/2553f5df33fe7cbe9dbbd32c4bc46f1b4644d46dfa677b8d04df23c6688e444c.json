{"ast":null,"code":"var _jsxFileName = \"W:\\\\project\\\\glasses-tryon\\\\src\\\\FaceTracking.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { FaceMesh } from '@mediapipe/face_mesh';\nimport { Camera } from '@mediapipe/camera_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FaceTracking = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const faceMesh = new FaceMesh({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`\n    });\n    faceMesh.setOptions({\n      maxNumFaces: 1,\n      refineLandmarks: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    faceMesh.onResults(onResults);\n    if (videoRef.current) {\n      const camera = new Camera(videoRef.current, {\n        onFrame: async () => {\n          await faceMesh.send({\n            image: videoRef.current\n          });\n        },\n        width: 640,\n        height: 480\n      });\n      camera.start();\n    }\n  }, []);\n  const onResults = results => {\n    const canvasCtx = canvasRef.current.getContext('2d');\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Draw the webcam feed\n    canvasCtx.drawImage(results.image, 0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Draw facial landmarks\n    if (results.multiFaceLandmarks) {\n      for (const landmarks of results.multiFaceLandmarks) {\n        canvasCtx.beginPath();\n        for (const landmark of landmarks) {\n          const x = landmark.x * canvasRef.current.width;\n          const y = landmark.y * canvasRef.current.height;\n          canvasCtx.arc(x, y, 2, 0, 2 * Math.PI);\n        }\n        canvasCtx.fillStyle = 'red';\n        canvasCtx.fill();\n      }\n    }\n    canvasCtx.restore();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        display: 'none'\n      },\n      width: \"640\",\n      height: \"480\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"640\",\n      height: \"480\",\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceTracking, \"0gwqVvoOV2or9Ql4L8GH2BGn3hc=\");\n_c = FaceTracking;\nexport default FaceTracking;\nvar _c;\n$RefreshReg$(_c, \"FaceTracking\");","map":{"version":3,"names":["React","useEffect","useRef","FaceMesh","Camera","jsxDEV","_jsxDEV","FaceTracking","_s","videoRef","canvasRef","faceMesh","locateFile","file","setOptions","maxNumFaces","refineLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","current","camera","onFrame","send","image","width","height","start","results","canvasCtx","getContext","save","clearRect","drawImage","multiFaceLandmarks","landmarks","beginPath","landmark","x","y","arc","Math","PI","fillStyle","fill","restore","children","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","border","_c","$RefreshReg$"],"sources":["W:/project/glasses-tryon/src/FaceTracking.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { FaceMesh } from '@mediapipe/face_mesh';\r\nimport { Camera } from '@mediapipe/camera_utils';\r\n\r\nconst FaceTracking = () => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const faceMesh = new FaceMesh({\r\n      locateFile: (file) =>\r\n        `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`,\r\n    });\r\n\r\n    faceMesh.setOptions({\r\n      maxNumFaces: 1,\r\n      refineLandmarks: true,\r\n      minDetectionConfidence: 0.5,\r\n      minTrackingConfidence: 0.5,\r\n    });\r\n\r\n    faceMesh.onResults(onResults);\r\n\r\n    if (videoRef.current) {\r\n      const camera = new Camera(videoRef.current, {\r\n        onFrame: async () => {\r\n          await faceMesh.send({ image: videoRef.current });\r\n        },\r\n        width: 640,\r\n        height: 480,\r\n      });\r\n      camera.start();\r\n    }\r\n  }, []);\r\n\r\n  const onResults = (results) => {\r\n    const canvasCtx = canvasRef.current.getContext('2d');\r\n    canvasCtx.save();\r\n    canvasCtx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\r\n    // Draw the webcam feed\r\n    canvasCtx.drawImage(\r\n      results.image,\r\n      0,\r\n      0,\r\n      canvasRef.current.width,\r\n      canvasRef.current.height\r\n    );\r\n\r\n    // Draw facial landmarks\r\n    if (results.multiFaceLandmarks) {\r\n      for (const landmarks of results.multiFaceLandmarks) {\r\n        canvasCtx.beginPath();\r\n        for (const landmark of landmarks) {\r\n          const x = landmark.x * canvasRef.current.width;\r\n          const y = landmark.y * canvasRef.current.height;\r\n          canvasCtx.arc(x, y, 2, 0, 2 * Math.PI);\r\n        }\r\n        canvasCtx.fillStyle = 'red';\r\n        canvasCtx.fill();\r\n      }\r\n    }\r\n\r\n    canvasCtx.restore();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <video\r\n        ref={videoRef}\r\n        style={{ display: 'none' }}\r\n        width=\"640\"\r\n        height=\"480\"\r\n      ></video>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width=\"640\"\r\n        height=\"480\"\r\n        style={{ border: '1px solid black' }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceTracking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}